package services;

import java.util.Scanner;

import models.Conta;
import repositories.ListaDeContas;

public class ContaService {

	
	private ListaDeContas _contaRepository;
	private Scanner _leitor;

	public ContaService(ListaDeContas contaRepository, Scanner leitor) {
		super();
		this._contaRepository = contaRepository;
		this._leitor = leitor;
	}
	
	public void Cadastro() {
		System.out.println();
		System.out.println("........................");
		System.out.println("Cadastro da sua conta");
		System.out.println("........................");
		System.out.println();

		System.out.print("Código da Conta: ");
		int codigoDaConta = _leitor.nextInt();
		var contaExistente = _contaRepository.GetContaByCodigo(codigoDaConta);
		if(contaExistente != null) {
			System.out.println("Conta existente.");
			return;
		}

		System.out.print("Nome do Responsavel: ");
		String nome = _leitor.nextLine();
		nome = _leitor.nextLine();

		System.out.print("Valor de conta: ");
		double valor = _leitor.nextDouble();

		System.out.print("Valor do Limite: ");
		double limite = _leitor.nextDouble();

		Conta novaConta = new Conta(codigoDaConta, nome, valor, limite);
		Conta result = _contaRepository.InserirConta(novaConta);

		if (result == null) {
			return;
		}

		System.out.println("Conta Cadastrada com Sucesso!!!!!");
		System.out.println();
	}

	public void MostrarTodos() {

		System.out.println("........................");
		System.out.println("Mostrar Todas as Contas");
		System.out.println("........................");
		System.out.println();

		_contaRepository.PrintAll();
		System.out.println();

	}

	public void MostrarConta() {
		System.out.println("........................");
		System.out.println("Mostrar Conta");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código da Conta: ");
		int codigo = _leitor.nextInt();

		Conta resultado = _contaRepository.GetContaByCodigo(codigo);

		if (resultado == null) {
			return;
		}

		System.out.println("Código:" + resultado.getCodigo());
		System.out.println("Nome do Produto:" + resultado.getNome());
		System.out.println("Preço:" + resultado.getValor());
		System.out.println("Limite da Conta: " + resultado.getLimite());
		System.out.println();
	}

	public void AtualizarConta() {
		System.out.println("........................");
		System.out.println("Alterar Dados da Conta");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código da Conta: ");
		var codigo = _leitor.nextInt();
		System.out.println("Nome do Responsável: ");
		var nome = _leitor.nextLine();
		nome = _leitor.nextLine();
		System.out.println("Valor em Conta: ");
		var valor = _leitor.nextDouble();
		System.out.println("Limite: ");
		var limite = _leitor.nextDouble();

		Conta contaAtualizada = new Conta(codigo, nome, valor, limite);

		_contaRepository.UpdateConta(contaAtualizada);
		System.out.println();
	}

	public void RemoverConta() {
		System.out.println("........................");
		System.out.println("Remover a Conta");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código do Produto: ");
		var codigo = _leitor.nextInt();

		_contaRepository.DeleteContaByCodigo(codigo);
		System.out.println();
	}

	public void Deposito() {
		System.out.println("........................");
		System.out.println("Depósito");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código da Conta: ");
		var codigo = _leitor.nextInt();

		System.out.print("Digite o Valor do Depósito: ");
		double valorDep = _leitor.nextDouble();

		var contaPesquisa = _contaRepository.GetContaByCodigo(codigo);

		if (contaPesquisa == null) {
			return;
		}

		var valorTotal = contaPesquisa.getValor() + valorDep;
		contaPesquisa.setValor(valorTotal);

		_contaRepository.UpdateConta(contaPesquisa);
		System.out.println();
	}

	public void Pagamento() {
		System.out.println("........................");
		System.out.println("Pagamento");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código da Conta: ");
		var codigo = _leitor.nextInt();

		System.out.print("Digite o Valor do Pagamento: ");
		double pagamento = _leitor.nextDouble();

		var contaPagamento = _contaRepository.GetContaByCodigo(codigo);

		if (contaPagamento == null) {
			return;
		}

		var pagamentoValido = pagamento <= contaPagamento.getValor() && pagamento <= contaPagamento.getLimite();

		if (!pagamentoValido) {
			System.out.println("Pagamento inválido: Sem saldo ou sem limite");
		}

		var saldoNovo = contaPagamento.getValor() - pagamento;
		contaPagamento.setValor(saldoNovo);
		_contaRepository.UpdateConta(contaPagamento);
		System.out.println();
	}

	public void Transferencia() {
		System.out.println("........................");
		System.out.println("Transferência entre Contas");
		System.out.println("........................");
		System.out.println();

		System.out.print("Digite o Código da Conta Remetente: ");
		int codigoRemetente = _leitor.nextInt();

		System.out.print("Digite o Código da conta do Destinatario: ");
		int codigoDestinatario = _leitor.nextInt();

		System.out.print("Digite o Valor da Transferência: ");
		double valorTransferencia = _leitor.nextDouble();

		var contaRemetente = _contaRepository.GetContaByCodigo(codigoRemetente);
		if (contaRemetente == null) {
			return;
		}

		var contaDestinatario = _contaRepository.GetContaByCodigo(codigoDestinatario);
		if (contaDestinatario == null) {
			return;
		}

		var transferenciaValida = valorTransferencia <= contaRemetente.getValor()
				&& valorTransferencia <= contaRemetente.getLimite();

		if (!transferenciaValida) {
			System.out.println("Transferencia invalida: sem saldo ou limite");
			return;
		}

		var saldoContaRemetente = contaRemetente.getValor() - valorTransferencia;
		contaRemetente.setValor(saldoContaRemetente);
		_contaRepository.UpdateConta(contaRemetente);

		var saldoContaDestinatario = contaDestinatario.getValor() + valorTransferencia;
		contaDestinatario.setValor(saldoContaDestinatario);
		_contaRepository.UpdateConta(contaDestinatario);
	}
	
	public void Finalizar() {
		System.out.println("........................");
		System.out.println("Finalizando");
		System.out.println("........................");
		_leitor.close();
	}
	
	
	
	
	
}
